name: LearnStream Claude AI (PR/Issue/Comment)

on:
  workflow_dispatch:
    inputs:
      action:
        description: "open-issue | pr-comment | issue-comment"
        required: true
        type: choice
        options: [open-issue, pr-comment, issue-comment]
      target_repo:
        description: "owner/repo (defaults to current)"
        required: false
      number:
        description: "PR/Issue number (for comments)"
        required: false
      title:
        description: "Title (for open-issue)"
        required: false
      body:
        description: "Body text (markdown)"
        required: false

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: Sanity banner
        run: echo "=== Starting LearnStream Claude AI workflow ==="

      - name: Sanity: secrets present (fail fast if missing)
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.CLAUDE_AI_APP_ID }}" ]; then echo "Missing secret: CLAUDE_AI_APP_ID"; exit 1; fi
          if [ -z "${{ secrets.CLAUDE_AI_INSTALLATION_ID }}" ]; then echo "Missing secret: CLAUDE_AI_INSTALLATION_ID"; exit 1; fi
          if [ -z "${{ secrets.CLAUDE_AI_APP_PRIVATE_KEY }}" ]; then echo "Missing secret: CLAUDE_AI_APP_PRIVATE_KEY"; exit 1; fi
          echo "App ID: ${{ secrets.CLAUDE_AI_APP_ID }}"
          echo "Installation ID: ${{ secrets.CLAUDE_AI_INSTALLATION_ID }}"
          echo "Secrets are present (private key not shown)."

      - name: Mint installation token (GitHub App)
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.CLAUDE_AI_APP_ID }}
          private_key: ${{ secrets.CLAUDE_AI_APP_PRIVATE_KEY }}
          installation_retrieval_mode: id
          installation_retrieval_payload: ${{ secrets.CLAUDE_AI_INSTALLATION_ID }}

      - name: Compute target repo
        id: target
